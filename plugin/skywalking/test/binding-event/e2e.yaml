setup:
  env: kind
  file: kind.yaml
  steps:
    - name: copy kubectl config
      command: |
        # kind k8s cluster is in $TMPDIR
        cp $TMPDIR/e2e-k8s.config ~/.kube/config
    - name: install dapr
      command: |
        dapr -v || (wget -q https://raw.githubusercontent.com/dapr/cli/master/install/install.sh -O - | /bin/bash)
        dapr init -k
    - name: install helm
      command: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    - name: install kafka
      command: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo update
        helm install dapr-kafka bitnami/kafka --wait -n kafka --create-namespace -f ./plugin/skywalking/test/binding-event/kafka/kafka-non-persistence.yaml
    - name: build image
      command: |
        docker build -t skywalking_e2e_provider:latest -f plugin/skywalking/test/binding-event/docker/Dockerfile.provider .
        kind load docker-image skywalking_e2e_provider:latest
        docker build -t skywalking_e2e_of:latest -f plugin/skywalking/test/binding-event/docker/Dockerfile.of .
        kind load docker-image skywalking_e2e_of:latest
    - name: setup manifests
      path: plugin/skywalking/test/binding-event/manifests
      wait:
        - namespace: default
          resource: pod
          for: condition=Ready
  kind:
    expose-ports:
      - namespace: skywalking
        resource: service/skywalking-ui
        port: 80
  timeout: 20m

cleanup:
  # always never success failure
  on: always

trigger:
  action: ""
verify:
  # verify with retry strategy
  retry:
    # max retry count
    count: 10
    # the interval between two attempts, e.g. 10s, 1m.
    interval: 10s
  cases:
    - query: curl http://${mockoap_host}:${mockoap_12800}/receiveData
      expected: expected.data.yml